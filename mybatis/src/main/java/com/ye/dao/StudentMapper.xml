<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ye.dao.StudentMapper">
    <!--
  需求：获取所有学生及对应老师的信息
  思路：
      1. 获取所有学生的信息
      2. 根据获取的学生信息的老师ID->获取该老师的信息
      3. 思考问题，这样学生的结果集中应该包含老师，该如何处理呢，数据库中我们一般使用关联查询？
          1. 做一个结果集映射：StudentTeacher
          2. StudentTeacher结果集的类型为 Student
          3. 学生中老师的属性为teacher，对应数据库中为tid。
             多个 [1,...）学生关联一个老师=> 一对一，一对多
          4. 查看官网找到：association – 一个复杂类型的关联；使用它来处理关联查询
  -->
    <select id="getStudents" resultMap="StudentTeacher">
        select * from student
    </select>
    <select id="getStudents2" resultMap="StudentTeacher2">
         select s.id sid, s.name sname , t.name tname
          from student s,teacher t
          where s.tid = t.id
    </select>
    <resultMap id="StudentTeacher" type="student">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <association column="tid" property="teacher" javaType="Teacher" select="getTeacher"></association>
    </resultMap>
    <resultMap id="StudentTeacher2" type="student">
        <id column="id" property="id"/>
        <result column="sname" property="name"/>
        <association  property="teacher" javaType="Teacher">
            <result column="tname" property="name"/>
        </association>
    </resultMap>

    <select id="getTeacher" resultType="teacher">
        select * from teacher where id=#{id}
    </select>
</mapper>